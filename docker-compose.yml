version: '3.8'

services:
  app:
    build:
      context: .
    container_name: rest-server
    hostname: rest-server
    depends_on:
      - db
    environment:
      PGUSER: ${DB_USER}
      PGPASSWORD: ${DB_PASSWORD}
      PGHOST: ${DB_HOST}
      PGPORT: ${DB_PORT}
      PGNAME: ${DB_NAME}
    ports:
      - 8080:8080
    volumes:
      -  ./.env:/usr/src/app/.env  # Montar el archivo .env en el contenedor
    # En vez de este comando podriamos configurar docker-compose con healthschecks (investigar mas)
    command: ["sh", "-c",
               "echo 'Waiting for database...';
               timeout 60 sh -c 'until pg_isready -h db -p 5432; do sleep 1; done';
               exec /usr/local/bin/restaurant_system"]
    # deploy:
    #   restart_policy:
    #     condition: on-failure

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    hostname: db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}  # sets the superuser password for PostgreSQL. This env variable is necessary to use the postgres image.
      #POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

volumes:
  postgres-data:
